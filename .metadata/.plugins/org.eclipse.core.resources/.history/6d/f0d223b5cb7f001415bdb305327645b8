package ie.dit.naylor.mark;

import java.io.IOException;
import java.security.Principal;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.*;

import com.google.appengine.api.blobstore.BlobInfo;
import com.google.appengine.api.blobstore.BlobInfoFactory;
import com.google.appengine.api.blobstore.BlobKey;
import com.google.appengine.api.blobstore.BlobstoreServiceFactory;
import com.google.appengine.api.users.UserService;
import com.google.appengine.api.users.UserServiceFactory;
import com.google.appengine.api.datastore.DatastoreServiceFactory;
import com.google.appengine.api.datastore.DatastoreService;
import com.google.appengine.api.datastore.Key;

public class UploadServlet extends HttpServlet 
{
	private static final long serialVersionUID = 1L;
	private com.google.appengine.api.blobstore.BlobstoreService blobstoreService = BlobstoreServiceFactory.getBlobstoreService();
	private BlobInfoFactory infoFactory = new BlobInfoFactory();
	DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();
	public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException 
	{
		// Set up userservice
		UserService userService = UserServiceFactory.getUserService();
		userService.getCurrentUser();
		Principal myPrincipal = req.getUserPrincipal();
		
		@SuppressWarnings("deprecation")
		Map<String, BlobKey> blobs = blobstoreService.getUploadedBlobs(req);
		BlobKey blobKey = blobs.get("myFile");
		if (blobKey == null) 
		{ 
			res.sendRedirect("/");
		} 
		else 
		{
			System.out.println("Uploaded a file with blobKey:" + blobKey.getKeyString());
			BlobInfo info = infoFactory.loadBlobInfo(blobKey);
		    String fname = info.getFilename();
		    DownloadServlet.files.add(new File(fname, blobKey.getKeyString(), myPrincipal.getName(), "image"));
		    res.sendRedirect("/download");

		    //blobstoreService.serve(blobKey, res);
			//res.sendRedirect("/serve?blob-key=" + blobKey.getKeyString());
		    
		    
		    String guestbookName = req.getParameter("guestbookName");
		    Key imagekey = blobKey.getKeyString();
		    String content = req.getParameter("content");
		    Entity image = new Entity("Image", imagekey);
		    image.setProperty("fname", fname);
		    image.setProperty("user", myPrincipal.getName());
		    image.setProperty("key", blobKey.getKeyString());

		    DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();
		    datastore.put(greeting);
		}
	}
}